package sintactico;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol simbolo;
    
    public void syntax_error(Symbol simbolo) {
        this.simbolo = simbolo;
    }

    public Symbol getSimbolo() {
        return this.simbolo;
    }
:}

terminal IDENTIFICADOR, NUMERO, ENTERO, FLOTANTE, BOOLEANO, CARACTER, CADENA, 
         NUMERO_FLOTANTE, VALOR_BOOLEANO, VALOR_CARACTER, VALOR_CADENA, ARREGLO, MATRIZ, 
         OPERADOR, OPERADOR_INCREMENTO, OPERADOR_DECREMENTO, OPERADOR_DE_ASIGNACION, 
         OPERADOR_DE_ADICION, OPERADOR_DE_SUSTRACCION, OPERADOR_IGUAL_A, OPERADOR_DIFERENTE_DE, 
         OPERADOR_MAYOR_QUE, OPERADOR_MENOR_QUE, OPERADOR_MAYOR_IGUAL, OPERADOR_MENOR_IGUAL, 
         OPERADOR_AND, OPERADOR_OR, OPERADOR_NOT, SENTENCIA_ELSE_IF, SENTENCIA_IF, 
         SENTENCIA_ELSE, SENTENCIA_SWITCH, SENTENCIA_CASE, SENTENCIA_BREAK, SENTENCIA_CONTINUE, 
         SENTENCIA_DEFAULT, CICLO_WHILE, CICLO_DO, CICLO_FOR, RESERVADA_PUBLIC, 
         RESERVADA_PRIVATE, RESERVADA_PROTECTED, RESERVADA_FINAL, RESERVADA_STATIC, 
         RESERVADA_CLASS, RESERVADA_VOID, RESERVADA_RETURN, RESERVADA_PACKAGE, 
         RESERVADA_IMPORT, SIGNO_PUNTO, SIGNO_COMA, SIGNO_PUNTO_Y_COMA, SIGNO_DOS_PUNTOS, 
         PARENTESIS_ABIERTO, PARENTESIS_CERRADO, CORCHETE_ABIERTO, CORCHETE_CERRADO, 
         LLAVE_ABIERTA, LLAVE_CERRADA;

non terminal programa;
non terminal metodoMain;
non terminal codigo;
non terminal declaracionInicializada;
non terminal declaracion;

programa ::= clase;

clase ::=
    RESERVADA_PUBLIC RESERVADA_CLASS IDENTIFICADOR LLAVE_ABIERTA metodoMain LLAVE_CERRADA
    | RESERVADA_PRIVATE RESERVADA_CLASS IDENTIFICADOR LLAVE_ABIERTA metodoMain LLAVE_CERRADA
    | RESERVADA_PROTECTED RESERVADA_CLASS IDENTIFICADOR LLAVE_ABIERTA metodoMain LLAVE_CERRADA
    | RESERVADA_CLASS IDENTIFICADOR LLAVE_ABIERTA metodoMain LLAVE_CERRADA
;
metodoMain ::=
    RESERVADA_PUBLIC RESERVADA_STATIC RESERVADA_VOID IDENTIFICADOR
    PARENTESIS_ABIERTO ARREGLO IDENTIFICADOR PARENTESIS_CERRADO
    LLAVE_ABIERTA codigo LLAVE_CERRADA
;
codigo ::=
    /* Declaraciones de variables y constantes */
    declaracionInicializada
    | declaracion
;
declaracionInicializada ::=
    ENTERO IDENTIFICADOR OPERADOR_DE_ASIGNACION NUMERO SIGNO_PUNTO_Y_COMA
    | FLOTANTE IDENTIFICADOR OPERADOR_DE_ASIGNACION NUMERO_FLOTANTE SIGNO_PUNTO_Y_COMA
    | BOOLEANO IDENTIFICADOR OPERADOR_DE_ASIGNACION VALOR_BOOLEANO SIGNO_PUNTO_Y_COMA
    | CARACTER IDENTIFICADOR OPERADOR_DE_ASIGNACION VALOR_CARACTER SIGNO_PUNTO_Y_COMA
    | CADENA IDENTIFICADOR OPERADOR_DE_ASIGNACION VALOR_CADENA SIGNO_PUNTO_Y_COMA
    /* Hay que a침adir declaraci칩n de arreglos y matrices de cada tipo
;
declaracion ::=
    ENTERO IDENTIFICADOR SIGNO_PUNTO_Y_COMA
    | FLOTANTE IDENTIFICADOR SIGNO_PUNTO_Y_COMA
    | BOOLEANO IDENTIFICADOR SIGNO_PUNTO_Y_COMA
    | CARACTER IDENTIFICADOR SIGNO_PUNTO_Y_COMA
    | CADENA IDENTIFICADOR SIGNO_PUNTO_Y_COMA
    /* Hay que a침adir declaraci칩n de arreglos y matrices de cada tipo
;